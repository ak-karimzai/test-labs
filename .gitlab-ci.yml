stages:
  - test
  - build
  - deploy
  - unit
  - integration
  - e2e

run_tests:
  stage: test
  image: python:3.9-slim-buster
  before_script:
    - apt-get update && apt-get install make
    - pip install peewee
  script:
    - make test


build_image:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASS
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG


deploy:
  stage: deploy
  before_script:
    - chmod 400 $SSH_KEY
  script:
    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY root@161.35.223.117 "
        docker login -u $REGISTRY_USER -p $REGISTRY_PASS &&
        docker ps -aq | xargs docker stop | xargs docker rm &&
        docker run -d -p 5000:5000 $IMAGE_NAME:$IMAGE_TAG"

unit tests:
  script:
    - python -m unittest Tests/UnitTests/GuideUnitTest.py
    - python -m unittest Tests/UnitTests/GuideServiceUnitTest.py
  stage: unit

integration tests:
  script:
    - python -m unittest Tests/IntTests/integration_tests.py
    - python -m unittest Tests/IntTests/integration_tests_mock.py
  stage: integration

e2e tests:
  script:
    - python -m unittest Tests/E2E/testAll.py
  stage: e2e
